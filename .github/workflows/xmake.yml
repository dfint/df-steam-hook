name: XMake

on:
  push:
    branches: [ "main" ]
    paths:
      - '.github/workflows/xmake.yml'
      - 'src/**'
      - 'deps/**'
      - xmake.lua
  pull_request:
    branches: [ "main" ]
    paths:
      - '.github/workflows/xmake.yml'
      - 'src/**'
      - 'deps/**'
      - xmake.lua

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
      with:
        vs-prerelease: true
        vs-version: '[17.7,17.8)'

    # Force xmake to a specific folder (for cache)
    - name: Set xmake env
      run: echo "XMAKE_GLOBALDIR=${{ runner.workspace }}/xmake-global" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    # Install xmake
    - name: Setup xmake
      uses: xmake-io/github-action-setup-xmake@v1
      with:
        xmake-version: branch@master
        actions-cache-folder: .xmake-cache-W${{ steps.cache_key.outputs.key }}

    # Update xmake repository (in order to have the file that will be cached)
    - name: Update xmake repository
      run: xmake repo --update

    # Fetch xmake dephash
    - name: Retrieve dependencies hash
      id: dep_hash
      run: echo "hash=$(xmake l utils.ci.packageskey)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

    # Cache xmake dependencies
    - name: Retrieve cached xmake dependencies
      uses: actions/cache@v3
      with:
        path: ${{ env.XMAKE_GLOBALDIR }}\.xmake\packages
        key: xmake-${{ steps.dep_hash.outputs.hash }}-W${{ steps.cache_key.outputs.key }}

    - name: Build all targets
      run: xmake -y --all
